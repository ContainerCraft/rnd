name: Test
on:
  pull_request:
  push:
    branches:
      - main
      - releases/*

jobs:
  qubo-testing:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Prepare Node
      run: |
        docker volume create worker1-containerd
        docker volume create control1-containerd

    - name: Create kind cluster QuboCI
      uses: helm/kind-action@v1.2.0
      with:
        cluster_name: "qubo-ci"
        config: kind/config.yaml

    - name: Prepare Cluster
      run: |
        kubectl cluster-info
        kubectl get storageclass standard
        kubectl get nodes -oyaml | grep 'test:' && echo "detected node label 'qubo=test'"
        ls $HOME/.ssh/id_rsa || ssh-keygen -t rsa -N "" -f $HOME/.ssh/id_rsa
        kubectl create secret generic kargo-sshpubkey-kc2user --from-file=key1=$HOME/.ssh/id_rsa.pub

    - name: Test Cluster
      run: |
        kubectl create ns kubevirt
        kubectl apply -nkubevirt -f https://github.com/kubevirt/kubevirt/releases/download/v0.47.1/kubevirt-operator.yaml
        kubectl apply -nkubevirt -f https://github.com/kubevirt/kubevirt/releases/download/v0.47.1/kubevirt-cr.yaml
        sleep 4
        kubectl create configmap kubevirt-config -n kubevirt --from-literal debug.useEmulation=true
        sleep 90
        kubectl get po -A
        echo
        kubectl apply -f preview/ubuntu.yaml
        sleep 120
        kubectl get po -A
        sleep 90
        kubectl get po -A
        echo
        kubectl get events -A
        kubectl describe vm ubuntu
        sleep 4
        ssh -p30950 kc2user@127.0.0.1 screenfetch 
